{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/www/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nexport function middleware(request: NextRequest) {\n  // Clone the request headers\n  const requestHeaders = new Headers(request.headers);\n  \n  // Generate a nonce for CSP\n  const nonce = Buffer.from(crypto.randomUUID()).toString(\"base64\");\n  \n  // Define Content Security Policy\n  const cspHeader = `\n    default-src 'self';\n    script-src 'self' 'nonce-${nonce}' 'strict-dynamic' https: 'unsafe-inline';\n    style-src 'self' 'unsafe-inline';\n    img-src 'self' blob: data: https:;\n    font-src 'self';\n    object-src 'none';\n    base-uri 'self';\n    form-action 'self';\n    frame-ancestors 'none';\n    upgrade-insecure-requests;\n  `\n    .replace(/\\s{2,}/g, \" \")\n    .trim();\n\n  // Set request headers\n  requestHeaders.set(\"x-nonce\", nonce);\n  \n  // Create response with modified request headers\n  const response = NextResponse.next({\n    request: {\n      headers: requestHeaders,\n    },\n  });\n\n  // Set security headers\n  response.headers.set(\"Content-Security-Policy\", cspHeader);\n  response.headers.set(\"X-Frame-Options\", \"DENY\");\n  response.headers.set(\"X-Content-Type-Options\", \"nosniff\");\n  response.headers.set(\"Referrer-Policy\", \"strict-origin-when-cross-origin\");\n  response.headers.set(\"X-XSS-Protection\", \"1; mode=block\");\n  response.headers.set(\n    \"Permissions-Policy\",\n    \"camera=(), microphone=(), geolocation=(), browsing-topics=()\"\n  );\n  \n  // Set HSTS header for production\n  if (process.env.NODE_ENV === \"production\") {\n    response.headers.set(\n      \"Strict-Transport-Security\",\n      \"max-age=31536000; includeSubDomains; preload\"\n    );\n  }\n\n  return response;\n}\n\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api/auth (auth routes need special handling)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico, sitemap.xml, robots.txt (metadata files)\n     */\n    {\n      source: \"/((?!api/auth|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt).*)\",\n      missing: [\n        { type: \"header\", key: \"next-router-prefetch\" },\n        { type: \"header\", key: \"purpose\", value: \"prefetch\" },\n      ],\n    },\n  ],\n};"],"names":[],"mappings":";;;;AAOgB;AAPhB;AAAA;;AAEO,SAAS,WAAW,OAAoB;IAC7C,4BAA4B;IAC5B,MAAM,iBAAiB,IAAI,QAAQ,QAAQ,OAAO;IAElD,2BAA2B;IAC3B,MAAM,QAAQ,qHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,UAAU,IAAI,QAAQ,CAAC;IAExD,iCAAiC;IACjC,MAAM,YAAY,CAAC;;6BAEQ,EAAE,MAAM;;;;;;;;;EASnC,CAAC,CACE,OAAO,CAAC,WAAW,KACnB,IAAI;IAEP,sBAAsB;IACtB,eAAe,GAAG,CAAC,WAAW;IAE9B,gDAAgD;IAChD,MAAM,WAAW,sYAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QACjC,SAAS;YACP,SAAS;QACX;IACF;IAEA,uBAAuB;IACvB,SAAS,OAAO,CAAC,GAAG,CAAC,2BAA2B;IAChD,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;IACxC,SAAS,OAAO,CAAC,GAAG,CAAC,0BAA0B;IAC/C,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;IACxC,SAAS,OAAO,CAAC,GAAG,CAAC,oBAAoB;IACzC,SAAS,OAAO,CAAC,GAAG,CAClB,sBACA;IAGF,iCAAiC;IACjC;;IAOA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;YACE,QAAQ;YACR,SAAS;gBACP;oBAAE,MAAM;oBAAU,KAAK;gBAAuB;gBAC9C;oBAAE,MAAM;oBAAU,KAAK;oBAAW,OAAO;gBAAW;aACrD;QACH;KACD;AACH"}}]
}