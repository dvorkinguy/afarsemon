{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/www/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport function middleware(request: NextRequest) {\n  // Log environment variables for debugging in production\n  if (process.env.NODE_ENV === 'production') {\n    console.log('[Middleware] Production Environment Check:', {\n      host: request.headers.get('host'),\n      url: request.url,\n      userAgent: request.headers.get('user-agent'),\n      environment: {\n        NODE_ENV: process.env.NODE_ENV,\n        VERCEL: process.env.VERCEL,\n        VERCEL_ENV: process.env.VERCEL_ENV,\n        VERCEL_URL: process.env.VERCEL_URL,\n        hasOriginalBetterAuthUrl: !!process.env.BETTER_AUTH_URL,\n        originalBetterAuthUrl: process.env.BETTER_AUTH_URL,\n        hasPublicBetterAuthUrl: !!process.env.NEXT_PUBLIC_BETTER_AUTH_URL,\n        publicBetterAuthUrl: process.env.NEXT_PUBLIC_BETTER_AUTH_URL,\n      }\n    });\n  }\n\n  return NextResponse.next()\n}\n\n// Configure which paths the middleware runs on\nexport const config = {\n  matcher: [\n    // Skip all internal paths (_next)\n    '/((?!_next/static|_next/image|favicon.ico).*)',\n  ],\n}"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,wDAAwD;IACxD;;IAkBA,OAAO,sYAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP,kCAAkC;QAClC;KACD;AACH"}}]
}